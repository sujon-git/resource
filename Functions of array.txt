numbers = [1, 3, 4, 5, 6]

// Filter: filter and return new array by condition
const filter = numbers.filter((num) => num>2)
console.log('filter val: ', filter);

// Find: find and return first value by condition
const find = numbers.find((num) => num>2)
console.log('find val: ', find);

// FindIndex: find and return first index by condition
const findIndex = numbers.findIndex((num) => num>2)
console.log('find index val: ', findIndex);

// Slice: slice array by StartingIndex and EndingIndex. if give only StartIndex it slice StartIndex to all end array elements
const slice = numbers.slice(2, 4)
console.log('slice val: ', slice);

// Concat: concat new element in array
const concat = numbers.concat(7, 8, 9)
console.log('concat val: ', concat);

// Splice: remove element from array by index and number of element: arr.splice(startingIndex, numberOfElementRemoveAfterIndex)
// and return removed elements as array
const splice = numbers.splice(1, 2)
console.log('spliced val: ', splice)
console.log('original array: ', numbers)

// Push: add new element on array and return array length
const push = numbers.push(7, 8, 9)
console.log('push length: ', push)
console.log('original array: ', numbers)

// Map: if we want to modify every element of array by a perticular logic or itarate like for loop without change main array
const newNumbers = numbers.map((num) => {
  return num*2;
})
console.log(newNumbers);